#+REVEAL_ROOT: ./src/reveal.js/
#+REVEAL_MATHJAX_URL: ./src/mathjax/es5/tex-chtml.js
#+REVEAL_HIGHLIGHT_CSS: %r/plugin/highlight/monokai.css
#+REVEAL_PLUGINS: (highlight notes)
#+REVEAL_THEME: simple
#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./images/background_1.jpg
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./images/background_1.jpg
#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+REVEAL_EXTRA_CSS: org.css
#+REVEAL_POSTAMBLE: <script>Reveal.configure({ hash:true });</script>
#+PROPERTY: header-args :noweb strip-export :exports both

#+NAME: mpl
#+begin_src python :export none :exports none
import matplotlib.pyplot as plt
plt.style.use("bmh")
plt.rcParams["savefig.transparent"] = True
#+end_src

#+RESULTS: mpl
: None

#+TITLE: Fast Parallel Line Fitting with Astropy
#+AUTHOR: Stuart Mumford
#+REVEAL_TITLE_SLIDE: <h3>%t</h3>
#+REVEAL_TITLE_SLIDE: <h4>%a</h4>
#+REVEAL_TITLE_SLIDE: <div class="three-columns" style="align-items: center;"><a href="https://aperio.software"><img src='images/aperio.svg'/></a><a href="https://asttropy.org"><img src='images/astropy_logo_small.svg'/></a><a href="https://sunpy.org"><img src='images/sunpy.svg'/></a></div>

#+BEGIN_NOTES
Talk Objectives:

- Understand what Astropy Modeling is, and why it's useful
- Understand the performace penalty of fitting many spectra
- Understand how the   
#+END_NOTES

* Me
:PROPERTIES:
:CUSTOM_ID: me
:END:

#+REVEAL_HTML: <div class='two-columns'><div style="width: 66%;">

I have a PhD in numerical solar physics from Sheffield.

I've been Lead Developer of SunPy since ~2012

Now run Apeiro Software - A company doing Open Source software development for Astro and Solar Physics

#+REVEAL_HTML: <hr>
Find me online:

- [[https://cadair.com][cadair.com]]
- [[https://github.com/Cadair][@Cadair]] on GitHub
- [[https://matrix.to/#/@cadair:cadair.com][@cadair:cadair.com]] on Matrix
- [[https://mastodon.matrix.org/@Cadair][@cadair@nheko.io]] on Mastodon

#+REVEAL_HTML: </div><div>

#+attr_html: :width 100%
[[./images/cadair.jpg]]

#+REVEAL_HTML: </div></div>

#+BEGIN_NOTES
-  A year off in 2014 to finish my thesis.
#+END_NOTES

* Astropy Modeling
:PROPERTIES:
:CUSTOM_ID: astropy_intro
:END:

#+ATTR_REVEAL: :frag t
Astropy modeling is a framework for representing, evaluating and fitting models.

#+ATTR_REVEAL: :frag t
It's focus is on approachable code, expressively describing and evaluating the models.

#+ATTR_REVEAL: :frag t
It integrates well with astropy's physical units package.

** Quick Example
:PROPERTIES:
:CUSTOM_ID: model_example
:END:

#+begin_src python :session initial-model :exports none
<<mpl>>
import numpy as np

fig = plt.figure(figsize=(10, 3))
#+end_src

#+RESULTS:

#+begin_src python :results graphics file output :file ./images/generated/initial_model.svg :session initial-model
import astropy.units as u
import astropy.modeling.models as m

wave = np.linspace(start=76, stop=77.5, num=1000) * u.nm

NIV_wave = 76.51 * u.nm
NeVIII_wave = 77.04 * u.nm

initial_model = (
    m.Gaussian1D(amplitude=1*u.count, mean=NIV_wave, stddev=0.05 * u.nm) +
    m.Gaussian1D(amplitude=1*u.count, mean=NeVIII_wave, stddev=0.05 * u.nm)
)

plt.plot(wave, initial_model(wave))
#+end_src

#+RESULTS:
[[file:./images/generated/initial_model.svg]]
